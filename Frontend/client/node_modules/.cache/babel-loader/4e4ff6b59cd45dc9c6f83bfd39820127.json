{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Chat_VideoChat_6746--master\\\\Frontend\\\\client\\\\src\\\\components\\\\screens\\\\VideoChat.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport '../../App.css';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\nconst socket = io.connect('http://localhost:5000');\n\nfunction VideoChat() {\n  _s();\n\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  const [reloadStatus, setReloadStatus] = useState(false); //Added by Soham\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n    });\n    socket.on(\"me\", id => {\n      setMe(id);\n    });\n    socket.on(\"callUser\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#4776e6\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: 'white'\n        },\n        children: \"Call Your Homies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: stream && /*#__PURE__*/_jsxDEV(\"video\", {\n              playsInline: true,\n              muted: true,\n              ref: myVideo,\n              autoPlay: true,\n              style: {\n                width: \"250px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"video\", {\n              playsInline: true,\n              ref: userVideo,\n              autoPlay: true,\n              style: {\n                width: \"250px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), receivingCall && !callAccepted ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"caller\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 25\n              },\n              children: [name, \" is calling...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: answerCall,\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myId\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            placeholder: \"Enter yor name\",\n            variant: \"filled\" // value={name}\n            ,\n            onChange: e => setName(e.target.value),\n            style: {\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: me,\n            style: {\n              marginBottom: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 80\n              }, this),\n              children: \"Copy ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-basic\",\n            placeholder: \"ID to call\",\n            variant: \"filled\",\n            value: idToCall,\n            onChange: e => setIdToCall(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-button\",\n            children: [callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: leaveCall,\n              children: \"End Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              \"aria-label\": \"call\",\n              onClick: () => callUser(idToCall),\n              children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), idToCall]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoChat, \"mWAI0QhxKExCS0FgK11NPIKcOf4=\");\n\n_c = VideoChat;\nexport default VideoChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"sources":["E:/Chat_VideoChat_6746--master/Frontend/client/src/components/screens/VideoChat.js"],"names":["Button","IconButton","TextField","AssignmentIcon","PhoneIcon","React","useEffect","useRef","useState","CopyToClipboard","Peer","io","useContext","UserContext","socket","connect","VideoChat","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","reloadStatus","setReloadStatus","state","dispatch","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","data","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","backgroundColor","textAlign","color","width","fontSize","e","target","value","marginBottom"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport TextField from \"@material-ui/core/TextField\"\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\nimport PhoneIcon from \"@material-ui/icons/Phone\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport '../../App.css'\nimport {useContext} from 'react'\nimport {UserContext} from '../../App'\n\n\nconst socket = io.connect('http://localhost:5000')\nfunction VideoChat() {\n\tconst [ me, setMe ] = useState(\"\")\n\tconst [ stream, setStream ] = useState()\n\tconst [ receivingCall, setReceivingCall ] = useState(false)\n\tconst [ caller, setCaller ] = useState(\"\")\n\tconst [ callerSignal, setCallerSignal ] = useState()\n\tconst [ callAccepted, setCallAccepted ] = useState(false)\n\tconst [ idToCall, setIdToCall ] = useState(\"\")\n\tconst [ callEnded, setCallEnded] = useState(false)\n\tconst [ name, setName ] = useState(\"\")\n\tconst myVideo = useRef()\n\tconst userVideo = useRef()\n\tconst connectionRef= useRef()\n\tconst [reloadStatus,setReloadStatus]=useState(false)//Added by Soham\n\tconst {state,dispatch}=useContext(UserContext)\n\n\tuseEffect(() => {\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n\t\t\tsetStream(stream)\n\t\t\t\tmyVideo.current.srcObject = stream\n\t\t})\n\n\tsocket.on(\"me\", (id) => {\n\t\t\tsetMe(id)\n\t\t})\n\n\t\tsocket.on(\"callUser\", (data) => {\n\t\t\tsetReceivingCall(true)\n\t\t\tsetCaller(data.from)\n\t\t\tsetName(data.name)\n\t\t\tsetCallerSignal(data.signal)\n\t\t})\n\t}, [])\n\n\tconst callUser = (id) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: stream\n\t\t})\n\t\tpeer.on(\"signal\", (data) => {\n\t\t\tsocket.emit(\"callUser\", {\n\t\t\t\tuserToCall: id,\n\t\t\t\tsignalData: data,\n\t\t\t\tfrom: me,\n\t\t\t\tname: name\n\t\t\t})\n\t\t})\n\t\tpeer.on(\"stream\", (stream) => {\n\t\t\t\tuserVideo.current.srcObject = stream\n\t\t})\n\t\tsocket.on(\"callAccepted\", (signal) => {\n\t\t\tsetCallAccepted(true)\n\t\t\tpeer.signal(signal)\n\t\t})\n\n\t\tconnectionRef.current = peer\n\t}\n\n\tconst answerCall =() =>  {\n\t\tsetCallAccepted(true)\n\t\tconst peer = new Peer({\n\t\t\tinitiator: false,\n\t\t\ttrickle: false,\n\t\t\tstream: stream\n\t\t})\n\t\tpeer.on(\"signal\", (data) => {\n\t\t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\n\t\t})\n\t\tpeer.on(\"stream\", (stream) => {\n\t\t\tuserVideo.current.srcObject = stream\n\t\t})\n\n\t\tpeer.signal(callerSignal)\n\t\tconnectionRef.current = peer\n\t}\n\n\tconst leaveCall = () => {\n\t\tsetCallEnded(true)\n\t\tconnectionRef.current.destroy()\n\t}\n\n\n\treturn (\n\t\t<>\n        <div style={{backgroundColor:\"#4776e6\"}}>\n            <h1 style={{ textAlign: \"center\", color: 'white' }}>Call Your Homies</h1>\n            <div className=\"container\">\n                <div className=\"video-container\">\n                    <div className=\"video\">\n                        {stream &&  <video playsInline muted ref={myVideo} autoPlay style={{ width: \"250px\" }} />}\n                    </div>\n                    <div className=\"video\">\n                        {callAccepted && !callEnded ?\n                        <video playsInline ref={userVideo} autoPlay style={{ width: \"250px\"}} />:\n                        null}\n                    </div>\n\t\t\t\t\t{receivingCall && !callAccepted ? (\n\t\t\t\t\t\t<div className=\"caller\">\n\t\t\t\t\t\t\t<span style={{fontSize:25}}>{name} is calling...</span>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n\t\t\t\t\t\t\t\tAnswer\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n                </div>\n                <div className=\"myId\">\n                    <TextField\n                        id=\"filled-basic\"\n                        placeholder=\"Enter yor name\"\n                        variant=\"filled\"\n                        // value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        style={{ marginBottom: \"20px\" }}\n                    />\n                    <CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon fontSize=\"large\" />}>\n                            Copy ID\n                        </Button>\n                    </CopyToClipboard>\n\n                    <TextField\n                        id=\"filled-basic\"\n                        placeholder=\"ID to call\"\n                        variant=\"filled\"\n                        value={idToCall}\n                        onChange={(e) => setIdToCall(e.target.value)}\n                    />\n                    <div className=\"call-button\">\n                        {callAccepted && !callEnded ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\n                                End Call\n                            </Button>\n                        ) : (\n                            <IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(idToCall)}>\n                                <PhoneIcon fontSize=\"large\" />\n                            </IconButton>\n                        )}\n                        {idToCall}\n                    </div>\n                </div>\n            </div>\n        </div>\n\t\t</>\n\t)\n}\n\nexport default VideoChat\n"]},"metadata":{},"sourceType":"module"}